CMAKE_MINIMUM_REQUIRED(VERSION 3.20)

INCLUDE_DIRECTORIES(${PROJECT_INCL_DIR}) 
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})


#SET(CMAKE_CXX_COMPILER /usr/bin/g++-11)
#SET(CMAKE_C_COMPILER /usr/bin/gcc-11)
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED True) 
SET(CMAKE_LINKER_FLAGS "-pthread")

IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
	SET(CMAKE_CXX_FLAGS "-g -Wall -Wextra")
ELSEIF(CMAKE_BUILD_TYPE STREQUAL "Release")
	SET(CMAKE_CXX_FLAGS "-O2")
ENDIF()

# use the Boost link directories
LINK_DIRECTORIES(${Boost_LIBRARY_DIR})

IF(RLENVSCPP_WEBOTS)
	INCLUDE_DIRECTORIES(${WEBOTS_INCLUDE_DIRS})
	LINK_DIRECTORIES(${WEBOTS_LIB_DIRS})
ENDIF()

IF(RLENVSCPP_RAY)
	INCLUDE_DIRECTORIES(${RAY_INCLUDE_DIRS})
	LINK_DIRECTORIES(${RAY_LIB_DIRS})
ENDIF()

LINK_DIRECTORIES(${CMAKE_INSTALL_PREFIX})
MESSAGE( STATUS  "${CMAKE_INSTALL_PREFIX}")

ADD_SUBDIRECTORY(example_1)
ADD_SUBDIRECTORY(example_2)
ADD_SUBDIRECTORY(example_3)
#ADD_SUBDIRECTORY(example_4)
ADD_SUBDIRECTORY(example_5)
ADD_SUBDIRECTORY(example_6)
ADD_SUBDIRECTORY(example_7)
ADD_SUBDIRECTORY(example_8)
ADD_SUBDIRECTORY(example_9)
ADD_SUBDIRECTORY(example_10)
ADD_SUBDIRECTORY(example_11)
ADD_SUBDIRECTORY(example_12)
ADD_SUBDIRECTORY(example_13)

#IF(RLENVSCPP_WEBOTS)
#	ADD_SUBDIRECTORY(webots/world_1)
#ENDIF()


# We follow a different approach when working with
# Ray so we don't compile the example with CMake
#IF(RLENVSCPP_RAY)
#	ADD_SUBDIRECTORY(ray/ray_example_2)
#ENDIF()
