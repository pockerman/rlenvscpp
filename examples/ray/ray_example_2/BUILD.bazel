cc_library(
    name = "ray_api",
    srcs = [
        "thirdparty/lib/libray_api.so",
    ],
    hdrs = glob([
        "thirdparty/include/**/*.h",
        "thirdparty/include/**/*.hpp",
    ]),
    linkopts = ["-Wl,-rpath,./"],
    strip_include_prefix = "thirdparty/include",
    visibility = ["//visibility:public"],
)

cc_library(
    name = "rlenvscpplib",
    srcs = glob([
				 "thirdparty/include/rlenvs/*.cpp",
				 "thirdparty/include/rlenvs/envs/*.cpp",
				 "thirdparty/include/rlenvs/envs/api_server/*.cpp",
				 "thirdparty/include/rlenvs/envs/gymnasium/*.cpp",
				 "thirdparty/include/rlenvs/envs/gymnasium/toy_text/*.cpp",
				 "thirdparty/include/rlenvs/envs/gymnasium/classic_control/*.cpp",
				 "thirdparty/include/rlenvs/envs/gymnasium/classic_control/vector/*.cpp",
				 "thirdparty/include/rlenvs/envs/gdrl/*.cpp",
				 "thirdparty/include/rlenvs/envs/multi_armed_bandits/*.cpp",
				 "thirdparty/include/rrlenvs/envs/gym_pybullet_drones/*.cpp",
				 "thirdparty/include/rlenvs/envs/grid_world/*.cpp",
				 "thirdparty/include/rlenvs/envs/connect2/*.cpp",
				 "thirdparty/include/rlenvs/envs/webots_envs/*.cpp",
				 "thirdparty/include/rlenvs/rigid_bodies/*.cpp",
				 "thirdparty/include/rlenvs/rigid_bodies/webots_robots/*.cpp",
				 "thirdparty/include/rlenvs/dynamics/*.cpp",
				 "thirdparty/include/rlenvs/utils/*.cpp",
				 "thirdparty/include/rlenvs/utils/io/*.cpp",
				 "thirdparty/include/rlenvs/utils/io/tensor_board_server/*.cpp",
				 "thirdparty/include/rlenvs/utils/maths/statistics/distributions/*.cpp",
				 "thirdparty/include/rlenvs/utils/geometry/shapes/*.cpp",
				 "thirdparty/include/rlenvs/utils/geometry/mesh/*.cpp",
				 "thirdparty/include/rlenvs/utils/trajectory/*.cpp",
    ]),
    hdrs = glob([
        "thirdparty/include/**/*.h",
        "thirdparty/include/**/*.hpp",
    ]),
    copts = ["-L./thirdparty/lib"],
    linkopts = ["-Wl,-rpath=./thirdparty/lib/librlenvscpplib.so"],
    strip_include_prefix = "thirdparty/include",
    visibility = ["//visibility:public"],
)


cc_binary(
    name = "ray_example_2",
    srcs = ["ray_example_2.cpp"],
    data = ["ray_example_2.so",],
    linkstatic = True,
    deps = [
        ":ray_api",
        ":rlenvscpplib"
    ],
)

cc_binary(
    name = "ray_example_2.so",
    srcs = glob([
        "ray_example_2.cpp",
    ]),
    linkopts = ["-shared"],
    linkstatic = True,
    deps = [
        ":ray_api",
        ":rlenvscpplib"
    ],
)


